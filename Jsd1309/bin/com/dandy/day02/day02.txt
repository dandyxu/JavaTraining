类库：通常放在JDK中
JDK=JRE+编译器+6000个类库
public static void main(String[] args)
args相当于string[]数组名为args
 对象和类型
 panel嵌套在frame窗体内
 往panel中添加文本，相当于往纸上写字，再将纸贴至panel中
 
 java代码的运行规则：
 删除.class文件后，会抛异常java.lang.ClassNotFoundException
   1.编译：.java----.class（通过编译）    javac      JframeDemo.java
   2.运行：直接.class                  java       JframeDemo.class
 思考题:编译器何时将.java变成.class文件
   3.对.java文件进行修改保存的时候，会进行编译的过程（**）
=============================================================================
如果出现红叉叉，说明编译无法通过，编译错误，根本无法运行
如果能够运行，但在console中显示错误，则为编译异常

选择题：正确的是ABD
A.Java跨平台   B.Java没有指针   C.Java不是面向对象    D.Java有一个叫垃圾回收器

标识符 :
         包名、类名、变量名、方法名
A.字母、数字、下划线、$组成
B.不能以数字开头
C.不能用Java的关键字和保留字（红色字体均为关键字）
D.￥可以使用，汉字也可以使用，最好不要用$和汉字
E.类名首字母最好是大写

以下属于标识符的是:ACE
A.HelloDemo    B. HelloDemo_21(以空格开头)   C.Hello$    D.12Hello   E.Class
=============================================================================

注释：标准程序员
//单行注释
/*  */多行注释
=============================================================================
二进制：（0，1）     低电频      高电频       逢二进一
99999   1 10 100 1000 10000
权：2     基数：1 2 4 8 16 32 64 128...
基数=权^（位数-1）
101010101=1+4+16+64+256=341
1010111=1+2+4+16+64=87
345=101011001（除法）
345=256+64+16+8+1=101011001（配凑法）
178=128+32+16+2=10110010


负数：
向前一位借数，-1为32个1
32位  -1 -9
-1:1 111 1111 1111 1111 1111 1111 1111 1111
-2:1 111 1111 1111 1111 1111 1111 1111 1110
-3:1 111 1111 1111 1111 1111 1111 1111 1101
-4:1 111 1111 1111 1111 1111 1111 1111 1100
-5:1 111 1111 1111 1111 1111 1111 1111 1011
-6:1 111 1111 1111 1111 1111 1111 1111 1010
-7:1 111 1111 1111 1111 1111 1111 1111 1001
-8:1 111 1111 1111 1111 1111 1111 1111 1000
-9:1 111 1111 1111 1111 1111 1111 1111 0111

负数的快捷算法：符号位不动，其余全部取反，然后换算成十进制+1，最后加负号
1 111 1111 1111 1111 1111 1111 10101110=1 000 0000 0000 0000 0000 0000 01010001=1+16+64=81+1=-82

1 111 1111 1111 1111 1111 1111 11101101=1 000 0000 0000 0000 0000 0000 00010010=2+16=18+1=-19
1 111 1111 1111 1111 1111 1111 10111011=1 000 0000 0000 0000 0000 0000 01000100=4+64+1=-69

给出-89，如何换算成二进制：
取反后的结果是-88,88=64+16+8=1011000=0100111=1 111 1111 1111 1111 1111 1111 10100111
-65，取反后-64,64=64=1000000=0111111=1 111 1111 1111 1111 1111 1111 10111111

思考题：
8位取值范围为:-128~127
最大值：127:0111 1111=2^7-1=127=2^(位数-1)-1
最小值：-128:1000 0000=-(128)=-2^7=-128=-2^（位数-1）









